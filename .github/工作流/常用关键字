C语言
常用关键字
auto break case char const continue default do double else 
enum extern float for goto if int long register return 
short signed sizeof static struct switch typedef union unsigned void 
volatile while
auto
(auto) int a=10;  //局部变量——自动变量  auto 省略了
register  //寄存器关键字
  寄存器
 高速缓存
 内存        4G/8G/16G
 硬盘       500G
 signed
(signed) int a =10;    //int 定义的变量是有符号的 signed 省略了
unsigned int num =-1  //无符号数，不论正负，num视为正数
typedef
typedef ——类型定义——类型重定义
typedef unsigned int U_int;
unsigned int num =20;=U_int num2=20;
static
#include <stdio.h>
void test()
{
    //(static) int a=1;   //a是静态的局部变量
    a++;
    printf("a=%d\n",a);
}
int main()static
{
    int i=0;
    while (i<5)
    {
        test()
        i++;            
    }
    return 0;
}
输出：   a=2   a=2
  a=2    a=3
  a=2    a=4
  a=2    a=5
  a=2     a=6
  int g-val=2020;
#include <stdio.h>
int main()
{
    extern int g-val;              //exturn 声明外部符号
    printf("g-val=%d\n",g-val);    //static 不能使用全局变量
    return 0;                      //static 修饰全局变量
}                                  //改变了变量的作用域——让静态的全局变量只能在自己所在的源文件内部使用
                                   //出了源文件就无法用了
输出：g-val=2020
 static add(int x,int y)             //static 修饰函数
{                                   //也是改变了函数的作用域（不准确）
    int z=x+y;                      //static修饰函数改变了函数的链接属性
    return z;                       //正常函数有外部链接属性
}                                   //用static修饰外部链接变成了内部属性
#include <stdio.h>
extern add(int,int)
int main()
{
    int a=20;
    int b=10;
    int sum=add(a,b);
    printf("%d\n",add);
    return 0;
}
输出：30
#定义常量和宏  //define 定义标识符常量
#define MAX 1000   //define 定义宏
#define ADD(x,y) ((x)+(y))
#include <stdio.h>    //define 定义的标识符常量
#define MAX 100       //#define 可以定义宏——带参数
int main()
{
    int a=MAX;
    return 0;
}
输出：100
#include <stdio.h>
int MAX(int x,int y)
{
    if(x>y)
    return x;
    else
    return y;
}
#define MAX(X,Y)(X>Y?X:Y)
int main()
{
    int a=10;
    int b=20;
    int max=MAX(a,b);   //函数的方式
    printf("max=%d\n",max);
    max =MAX(a,b)       //宏的方式
    printf("max=%d\n",max);
    return 0;    
}
